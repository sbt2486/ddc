<?php
/**
 * @file
 * Custom code additions for the DDC.
 */

use \Drupal\ddc_custom\EntityWrapper\Node\NodeWrapper;

/**
 * The grant id used for anonymous users.
 */
define('DDC_CUSTOM_GRANT_ID_PUBLIC', 1);

/**
 * The grant id used for authenticated users.
 */
define('DDC_CUSTOM_GRANT_ID_RESTRICTED', 2);

/**
 * The grant realm used in node access hooks.
 */
define('DDC_CUSTOM_ACCESS_REALM', 'ddc_custom_article');

/**
 * Implements hook_node_access_records().
 */
function ddc_custom_node_access_records($node) {
  $node_wrapper = new NodeWrapper($node);
  $grants = array();

  try {
    if (!$node_wrapper->articleIsPublic()) {
      // Node is yet restricted, grant view only to authenticated users.
      $grants[] = array(
        'realm' => DDC_CUSTOM_ACCESS_REALM,
        'gid' => DDC_CUSTOM_GRANT_ID_RESTRICTED,
        'grant_view' => 1,
        'grant_update' => 0,
        'grant_delete' => 0,
        'priority' => 0,
      );
    }
    else {
      // Node is full published and can be accessed by anyone, so grant view to
      // anybody.
      $grants[] = array(
        'realm' => DDC_CUSTOM_ACCESS_REALM,
        'gid' => DDC_CUSTOM_GRANT_ID_PUBLIC,
        'grant_view' => 1,
        'grant_update' => 0,
        'grant_delete' => 0,
        'priority' => 0,
      );
    }
  }
  catch (Exception $e) {}
  return $grants;
}

/**
 * Implements hook_node_grants().
 */
function ddc_custom_node_grants($account, $op) {
  if ($op == 'view') {
    if (array_key_exists(DRUPAL_AUTHENTICATED_RID, $account->roles)) {
      // Give both grant ids authenticated users, such that they can view any
      // node.
      $grants[DDC_CUSTOM_ACCESS_REALM] = array(
        DDC_CUSTOM_GRANT_ID_PUBLIC,
        DDC_CUSTOM_GRANT_ID_RESTRICTED,
      );
    }
    else {
      // Anonymous users aren't allowed to view restricted content, give them
      // only the public grant id.
      $grants[DDC_CUSTOM_ACCESS_REALM] = array(
        DDC_CUSTOM_GRANT_ID_PUBLIC,
      );
    }
  }

  return !empty($grants) ? $grants : array();
}

